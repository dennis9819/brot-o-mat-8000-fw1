#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <FS.h>

const char *ssid = "Brot";
const char *pw = "12345678";
ESP8266WebServer server(80); //Server on port 80

//==============================================================
//     This rutine is exicuted when you open its IP in browser
//==============================================================
void handleRoot() {
  server.send(200, "text/plain", "hello from esp8266!");
}

//===============================================================
//                  SETUP
//===============================================================
void setup(void){
  Serial.begin(115200);
  Serial.println("");
  if(!SPIFFS.begin()){
    Serial.println("An Error has occurred while mounting SPIFFS");
    return;
  }

  WiFi.mode(WIFI_AP);           //Only Access point
  WiFi.softAP(ssid, pw);  //Start HOTspot removing password will disable security

  IPAddress myIP = WiFi.softAPIP(); //Get IP address
  Serial.print("HotSpt IP:");
  Serial.println(myIP);
 
  //server.on("/", handleRoot);      //Which routine to handle at root location

  server.on("/", HTTP_GET, [](){
    File f = SPIFFS.open("/src/index.html","r");
    server.send(200,"text/html",f.readString());
  });

  //static libs
  server.on("/src/bootstrap.min.css", HTTP_GET, [](){
    File f = SPIFFS.open("/src/bootstrap.min.css","r");
    server.send(200,"text/css",f.readString());
  });

  server.on("/src/bootstrap.min.js", HTTP_GET, [](){
    File f = SPIFFS.open("/src/bootstrap.min.js","r");
    server.send(200,"text/javascript",f.readString());
  });

  server.on("/src/jquery-3.5.1.slim.min.js", HTTP_GET, [](){
    File f = SPIFFS.open("/src/jquery-3.5.1.slim.min.js","r");
    server.send(200,"text/javascript",f.readString());
  });

  server.on("/src/popper.min.js", HTTP_GET, [](){
    File f = SPIFFS.open("/src/popper.min.js","r");
    server.send(200,"text/css",f.readString());
  });

  server.begin();                  //Start server
  Serial.println("HTTP server started");
}
//===============================================================
//                     LOOP
//===============================================================
void loop(void){
  server.handleClient();          //Handle client requests
}